unit UPessoaFisica;

interface
uses UPessoa, UCondicaoPagamento,SysUtils,Dialogs;
type
  TPessoaFisica = class(TPessoa)
    private
    protected
      FNome:String;
      FRG:String;
      FCPF:String;
      FSexo:String;
      FUmaCP:TCondicaoPagamento;
    public
      constructor Create;
      destructor Destroy;

      procedure setNome(vNome:String);
      procedure setRG(vRG:string);
      procedure setCPF(vCPF:string);
      procedure setSexo(vSexo:String);
      procedure setCP(vCP:TCondicaoPagamento);

      function getNome:string;
      function getRG:string;
      function getCPF:string;
      function getSexo:String;
      function getCP:TCondicaoPagamento;

      property Nome:String read getNome write setNome;
      property RG:string read getRG write setRG;
      property CPF:string read getCPF write setCPF;
      property Sexo:String read getSexo write setSexo;
      property CP:TCondicaoPagamento read getCP write setCP;

      function ValidaCPF(VCpf:string):Boolean;

  end;

implementation

{ TPessoaFisica }

constructor TPessoaFisica.Create;
begin
inherited;
      FNome:='';
      FRG:='';
      FCPF:='';
      FSexo:='';
      FUmaCP:=TCondicaoPagamento.create;
end;

destructor TPessoaFisica.Destroy;
begin
inherited;
    FUmaCP.destroy;
end;

function TPessoaFisica.getCP: TCondicaoPagamento;
begin
  Result:=FUmaCP;
end;

function TPessoaFisica.getCPF: string;
begin
  Result:= FCPF;
end;

function TPessoaFisica.getNome: string;
begin
  Result:=FNome;
end;

function TPessoaFisica.getRG: string;
begin
   Result:=FRG;
end;

function TPessoaFisica.getSexo:String;
begin
   Result:=FSexo;
end;

procedure TPessoaFisica.setCP(vCP: TCondicaoPagamento);
begin
  FUmaCP:=vCP;
end;

procedure TPessoaFisica.setCPF(vCPF: string);
begin
   FCPF:=vCPF;
end;

procedure TPessoaFisica.setNome(vNome: String);
begin
   FNome:=vNome;
end;

procedure TPessoaFisica.setRG(vRG: string);
begin
   FRG:=vRG;
end;

procedure TPessoaFisica.setSexo(vSexo:String);
begin
   FSexo:=vSexo;
end;

function TPessoaFisica.ValidaCPF(VCpf: string): Boolean;
var CPF:array[1..11] of Integer;
    I,Y,aux,total:integer;
    strAux:string;
begin
    total:=0;
    Y:=1;
    if Length(VCpf) < 14 then
      Result:=False
    else
    begin
      for I :=1 to 14 do
        if TryStrToInt(VCpf[I],aux) then
        begin
            CPF[Y]:=aux;
            total:=CPF[Y];
            Inc(Y);
        end;
        strAux:=IntToStr(total);
         ShowMessage(strAux[1]+','+strAux[2]);
        if strAux[1] = strAux[2] then
           Result:=True
        else
           Result:=False;
    end;
end;

end.
