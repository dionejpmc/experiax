unit UFrmCadastroCargo;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, UFrmCadastroPai, RzButton, StdCtrls, Mask, RzEdit, RzLabel, ComCtrls,
  RzDTP, UCargo, UCtrlCargo;

type
  TFrmCadastroCargo = class(TFormCadastroPai)
    TLblCargo: TRzLabel;
    TEdtCargo: TRzEdit;
    TLblId: TRzLabel;
    TEdtId: TRzEdit;
    procedure TBtnSalvarClick(Sender: TObject);
    procedure TBtnLimparClick(Sender: TObject);
    procedure TEdtCargoKeyPress(Sender: TObject; var Key: Char);
    procedure TEdtIdKeyPress(Sender: TObject; var Key: Char);
    procedure FormCreate(Sender: TObject);
  private
    { Private declarations }
  protected
    UmCargo:TCargo;
    UmaCtrlCargo:TCtrlCargo;
  public
    { Public declarations }
    function ValidaCampos:Boolean;
    function ReconhecaObjeto(OCargo:TCargo;ACtrlCargo:TCtrlCargo):Boolean;
    procedure LimpaCampos;
  end;

var
  FrmCadastroCargo: TFrmCadastroCargo;

implementation

{$R *.dfm}

{ TFrmCadastroCargo }
procedure TFrmCadastroCargo.FormCreate(Sender: TObject);
begin
  inherited;
  Self.TDateTimePickerDataCadastro.DateTime:=Now;
  Self.TDateTimePickerDataAlteracao.DateTime:=Now;
end;

procedure TFrmCadastroCargo.LimpaCampos;
begin
      Self.TEdtId.Clear;
      Self.TEdtCargo.Clear;
end;

function TFrmCadastroCargo.ReconhecaObjeto(OCargo: TCargo;
  ACtrlCargo: TCtrlCargo): Boolean;
begin
  UmCargo:=OCargo;
  UmaCtrlCargo:=ACtrlCargo;
end;

procedure TFrmCadastroCargo.TBtnLimparClick(Sender: TObject);
begin
  inherited;
  if Self.TBtnCancelar.Caption = 'Selecionar' then
  begin

  end
  else
    Self.LimpaCampos;
end;

procedure TFrmCadastroCargo.TBtnSalvarClick(Sender: TObject);
var MSG:String;
    intAux:integer;
begin
  inherited;
  Self.ReconhecaObjeto(UmCargo,UmaCtrlCargo);
   if Self.ValidaCampos then
     begin
       if TryStrToInt(Self.TEdtId.Text, intAux) then
          UmCargo.IdCargo:=intAux
       else
          Exit;
       UmCargo.Cargo:=Self.TEdtCargo.Text;
       UmCargo.DataCadastro:=DateTimeToStr(Self.TDateTimePickerDataCadastro.DateTime);
       UmCargo.DataAlteracao:=DateTimeToStr(Self.TDateTimePickerDataAlteracao.DateTime);
       MSG:= UmaCtrlCargo.Salvar(UmCargo);
       ShowMessage(MSG);
       Self.LimpaCampos;
       Close;
     end;
end;

procedure TFrmCadastroCargo.TEdtCargoKeyPress(Sender: TObject; var Key: Char);
begin
  inherited;
   if not (key in ['A'..'Z','a'..'z',#8,#32]) then
     key := #0;
end;

procedure TFrmCadastroCargo.TEdtIdKeyPress(Sender: TObject; var Key: Char);
begin
  inherited;
   if not (key in ['0'..'9',#8]) then
      key := #0;
end;

function TFrmCadastroCargo.ValidaCampos: Boolean;
begin
  if Length( Self.TEdtCargo.Text) < 2   then
  begin
    Self.TEdtCargo.Color:=clWebSteelBlue;
    Self.TEdtCargo.SetFocus;
    Result:=False;
    Exit;
  end
  else
    Result:=True;
end;

end.
