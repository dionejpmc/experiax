unit UFrmCadastroContasReceber;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, UFrmCadastroPai, RzButton, StdCtrls, Mask, RzEdit, RzLabel, Grids,
  DBGrids, RzDBGrid, ExtCtrls, RzPanel, ComCtrls, RzDTP, RzStatus, RzDBStat, UCtrlContaReceber,UContaReceber,
  RzCmboBx, dxSkinsCore, dxSkinBlack, dxSkinBlue, dxSkinCaramel, dxSkinCoffee,
  dxSkinDarkRoom, dxSkinDarkSide, dxSkinFoggy, dxSkinGlassOceans,
  dxSkiniMaginary, dxSkinLilian, dxSkinLiquidSky, dxSkinLondonLiquidSky,
  dxSkinMcSkin, dxSkinMoneyTwins, dxSkinOffice2007Black, dxSkinOffice2007Blue,
  dxSkinOffice2007Green, dxSkinOffice2007Pink, dxSkinOffice2007Silver,
  dxSkinOffice2010Black, dxSkinOffice2010Blue, dxSkinOffice2010Silver,
  dxSkinPumpkin, dxSkinSeven, dxSkinSharp, dxSkinSilver, dxSkinSpringTime,
  dxSkinStardust, dxSkinSummer2008, dxSkinsDefaultPainters, dxSkinValentine,
  dxSkinXmas2008Blue, cxLookAndFeels, dxSkinsForm;

type
  TFrmCadastroContasReceber = class(TFormCadastroPai)
    TLblCliente: TRzLabel;
    TEdtCliente: TRzEdit;
    TBtnBuscarCliente: TRzButton;
    TLblValorConta: TRzLabel;
    TEdtValorConta: TRzEdit;
    TLblObservacao: TRzLabel;
    TEdtObservacao: TRzEdit;
    TLblCP: TRzLabel;
    TEdtFP: TRzEdit;
    TBtnBuscarFP: TRzButton;
    TLblNumNota: TRzLabel;
    TLblSerie: TRzLabel;
    TEdtSerie: TRzEdit;
    TEdtNumNota: TRzEdit;
    RzLabel1: TRzLabel;
    TEdtIdFP: TRzEdit;
    TEdtIdCliente: TRzEdit;
    RzLabel2: TRzLabel;
    TDateTimePickerDataVencimento: TRzDateTimePicker;
    RzLabel3: TRzLabel;
    TComboBoxStatus: TRzComboBox;
    TLblStatus: TRzLabel;
    TDateTimePickerDataPagamento: TDateTimePicker;
    TLblDataPagamento: TRzLabel;
    TEdtDesconto: TRzEdit;
    TLblTlblDesconto: TRzLabel;
    TEdtMulta: TRzEdit;
    TLblMulta: TRzLabel;
    TLblValorTotalConta: TRzLabel;
    TEdtValorTotalConta: TRzEdit;
    procedure TBtnSalvarClick(Sender: TObject);
    procedure TEdtMultaExit(Sender: TObject);
    procedure TEdtDescontoExit(Sender: TObject);
    procedure TComboBoxStatusKeyPress(Sender: TObject; var Key: Char);
    procedure TBtnLimparClick(Sender: TObject);
  private
    { Private declarations }
  protected
      UmaContaReceber:TContaReceber;
      UmaCtrlContaReceber:TCtrlContaReceber;

  public
    { Public declarations }
    procedure ReconhecaObjeto(AContaReceber:TContaReceber;ACtrlContaReceber:TCtrlContaReceber);
    function ValidaCampos:Boolean;
    procedure LimpaCampos;
  end;

var
  FrmCadastroContasReceber: TFrmCadastroContasReceber;

implementation

{$R *.dfm}

{ TFrmCadastroContasReceber }

procedure TFrmCadastroContasReceber.LimpaCampos;
var x:integer;
begin
for x := 0 to (ComponentCount) - 1 do
  begin
     //ShowMessage (IntToStr(Components[x].tag));
     //Verificação da propriedade pTag
     if (TComponent(Components[x]).Tag<>100) then
       begin
         if (Components[x] is TRzEdit) then
           (Components[x] as TRzEdit).Clear;
       end;
  end;
end;

procedure TFrmCadastroContasReceber.ReconhecaObjeto(
  AContaReceber: TContaReceber; ACtrlContaReceber: TCtrlContaReceber);
begin
    UmaContaReceber:=AContaReceber;
    UmaCtrlContaReceber:=ACtrlContaReceber;
end;

procedure TFrmCadastroContasReceber.TBtnLimparClick(Sender: TObject);
begin
  inherited;
  Self.LimpaCampos;
end;

procedure TFrmCadastroContasReceber.TBtnSalvarClick(Sender: TObject);
var MSG:String;
  FLOATVALUE:Double;
begin
  inherited;
  if Self.ValidaCampos then
  begin
    if Self.TComboBoxStatus.Text = 'Paga' then
    begin
       UmaContaReceber.ValorNota:=StrToFloat(Self.TEdtValorTotalConta.Text);
       if TryStrToFloat(Self.TEdtValorConta.Text,FLOATVALUE) then
            UmaContaReceber.Valor:=StrToFloat(Self.TEdtValorConta.Text)
       ELSE
       BEGIN
         ShowMessage('ERRO. VERIFIQUE OS VALORES DE CÁLCULO.');
         eXIT;
       END;
       if TryStrToFloat(Self.TEdtMulta.Text,FLOATVALUE) then
            UmaContaReceber.Juros:=StrToFloat(Self.TEdtMulta.Text);
       UmaContaReceber.Status:=1;
       if TryStrToFloat(Self.TEdtDesconto.Text,FLOATVALUE) then
            UmaContaReceber.Desconto:=StrToFloat(Self.TEdtDesconto.Text);
       MSG:= UmaCtrlContaReceber.Salvar(UmaContaReceber);
    end
    else if Self.TComboBoxStatus.Text = 'Cancelada' then
    begin
       UmaContaReceber.Status:=3;
       MSG:= UmaCtrlContaReceber.Salvar(UmaContaReceber);
    end
    else
    begin
      ShowMessage('STATUS INCORRETO.');
      Exit;
    end;

    if ValidaCampos  then
    begin
            ShowMessage(MSG);
            Self.LimpaCampos;
            Close;
    end;
  end
  else
  begin
    ShowMessage('PREEENCHA TODOS OS CAMPOS CORRETAMENTE.');
    Exit;
  end;

end;

procedure TFrmCadastroContasReceber.TComboBoxStatusKeyPress(Sender: TObject;
  var Key: Char);
begin
  inherited;
  if  (key  <> #0) then
       key:=#0;
end;

procedure TFrmCadastroContasReceber.TEdtDescontoExit(Sender: TObject);
var floatValue,floatAuxJurosDesconto:Double;
begin
  inherited;
  if TryStrToFloat(Self.TEdtValorConta.Text, floatValue) then
  begin
     if TryStrToFloat(Self.TEdtDesconto.Text, floatAuxJurosDesconto) then
      begin
          Self.TEdtValorTotalConta.Clear;
          if floatAuxJurosDesconto > 100 then
          begin
            ShowMessage('DESCONTO INAPROPRIADO.');
            Self.TEdtDesconto.Clear;
            eXIT;
          end;
          Self.TEdtValorTotalConta.Text:=FormatFloat('#0.00',(floatValue - ( (floatValue *  (floatAuxJurosDesconto / 100) )  ) ));
          if Length(Self.TEdtDesconto.Text)>=1 then
          begin
              Self.TEdtMulta.Enabled:=False;
              Self.TEdtMulta.Clear;
          end;
      end
      else
      begin
        Self.TEdtDesconto.Clear;
        Self.TEdtValorTotalConta.Clear;
        Self.TEdtMulta.Enabled:=True;
        Self.TEdtValorTotalConta.Text:=Self.TEdtValorConta.Text;
      end;
  end
  else
  begin
    Self.TEdtDesconto.Clear;
    Self.TEdtMulta.Clear;
    Self.TEdtValorTotalConta.Clear;
    Self.TEdtValorTotalConta.Text:=Self.TEdtValorConta.Text;
  end;
   if Length(Self.TEdtDesconto.Text)>=1 then
          begin
              Self.TEdtMulta.Enabled:=False;
              Self.TEdtMulta.Clear;
          end;
end;

procedure TFrmCadastroContasReceber.TEdtMultaExit(Sender: TObject);
var floatValue,floatAuxJurosDesconto:Double;
begin
  inherited;
  if TryStrToFloat(Self.TEdtValorConta.Text, floatValue) then
  begin
     if TryStrToFloat(Self.TEdtMulta.Text, floatAuxJurosDesconto) then
      begin
          Self.TEdtValorTotalConta.Clear;
          Self.TEdtValorTotalConta.Text:=FormatFloat('#0.00',( ( (floatValue * (floatAuxJurosDesconto / 100) ) ) + floatValue));
          if Length( Self.TEdtMulta.Text) >= 1 then
          begin
            Self.TEdtDesconto.Enabled:=False;
            Self.TEdtDesconto.Clear;
          end;
      end
      else
      begin
        Self.TEdtMulta.Clear;
        Self.TEdtValorTotalConta.Clear;
        Self.TEdtDesconto.Enabled:=True;
        Self.TEdtValorTotalConta.Text:=Self.TEdtValorConta.Text;
      end;
  end
  else
  begin
    Self.TEdtMulta.Clear;
    Self.TEdtValorTotalConta.Clear;
    Self.TEdtValorTotalConta.Text:=Self.TEdtValorConta.Text;
  end;
  if Length( Self.TEdtMulta.Text) >= 1 then
  begin
    Self.TEdtDesconto.Enabled:=True;
    Self.TEdtDesconto.Clear;
  end;
end;

function TFrmCadastroContasReceber.ValidaCampos: Boolean;
var floatAux:Double;
begin
if Self.TComboBoxStatus.Text = ' '  then
begin
    Self.TComboBoxStatus.Color:=clWebSteelBlue;
    Self.TComboBoxStatus.SetFocus;
    Result:=False;
    Exit;
end
else if not TryStrToFloat(Self.TEdtValorTotalConta.Text, floatAux) then
begin
    Self.TEdtValorTotalConta.Color:=clWebSteelBlue;
    Self.TEdtValorTotalConta.SetFocus;
    Result:=False;
    Exit;
end
else  if (Self.TComboBoxStatus.Text = 'Cancelada') or (Self.TComboBoxStatus.Text = 'Paga') then
   Result:=True;
end;

end.
