unit UFrmConsultarCidade;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, UFrmConsultarPai, Grids, DBGrids, RzDBGrid, ExtCtrls, RzPanel,
  RzButton, StdCtrls, Mask, RzEdit, RzLabel, RzStatus,UDM,DB,UCidade,UEstado,
  UFrmCadastroCidade,UCtrlCidade;

type
  TFrmConsultarCidade = class(TFrmConsultarPai)
    TGroupBoxCidade: TRzGroupBox;
    TDBGridCidade: TRzDBGrid;
    TLblCidade: TRzLabel;
    TEdtCidade: TRzEdit;
    TBtnBuscarCidade: TRzButton;
    TLblID: TRzLabel;
    TEdtIdCidade: TRzMaskEdit;
    procedure TEdtCidadeKeyPress(Sender: TObject; var Key: Char);
    procedure TEdtIdCidadeKeyPress(Sender: TObject; var Key: Char);
    procedure TBtnBuscarCidadeClick(Sender: TObject);
    procedure TBtnCancelarClick(Sender: TObject);
    procedure TBtnNovoClick(Sender: TObject);
    procedure TBtnEditarClick(Sender: TObject);
  private
    { Private declarations }
  protected
    UmaCidade:TCidade;
    UmaCtrlCidade:TCtrlCidade;
    UmFrmCadcidade:TFrmCadastroCidade;
  public
    { Public declarations }
    procedure ReconhecaObjeto(ACidade:TCidade);
  end;
 var
  FrmConsultarCidade: TFrmConsultarCidade;

implementation



{$R *.dfm}

procedure TFrmConsultarCidade.ReconhecaObjeto(ACidade: TCidade);
begin
    UmaCidade:=ACidade;
    UmaCtrlCidade:=TCtrlCidade.create;
    UmFrmCadcidade:=TFrmCadastroCidade.Create(nil);
    Self.TDBGridCidade.DataSource:=UmaCtrlCidade.GetDs;
end;

procedure TFrmConsultarCidade.TBtnBuscarCidadeClick(Sender: TObject);
begin
  inherited;
  if (Self.TEdtIdCidade.Text <> '') then
     UmaCtrlCidade.Buscar(StrtoInt(Self.TEdtIdCidade.Text),'');
  if (Self.TEdtCidade.Text <> '') then
    UmaCtrlCidade.Buscar(0,Self.TEdtCidade.Text);
  Self.TEdtCidade.Clear;
  Self.TEdtIdCidade.Clear;
end;

procedure TFrmConsultarCidade.TBtnCancelarClick(Sender: TObject);
begin
  inherited;
  if Self.TBtnCancelar.Caption = 'Selecionar' then
    UmaCidade:=TCidade(UmaCtrlCidade.Carregar(UmaCidade));
  Close;
end;

procedure TFrmConsultarCidade.TBtnEditarClick(Sender: TObject);
begin
  inherited;
  UmaCtrlCidade.Carregar(UmaCidade);
  if UmaCtrlCidade.Buscar(UmaCidade.IdCidade,'') then
  begin
      UmFrmCadcidade.TEdtIdCidade.Text:=IntToStr(UmaCidade.IdCidade);
      UmFrmCadcidade.TEdtCidade.Text:=UmaCidade.Cidade;
      UmFrmCadcidade.TEdtIdEstado.Text:=IntToStr(UmaCidade.Estado.IdEstado);
      UmFrmCadcidade.TDateTimePickerDataAlteracao.DateTime:=Now;
      UmFrmCadcidade.TDateTimePickerDataAlteracao.Date:=StrToDate(UmaCidade.DataCadastro);
      UmFrmCadcidade.TDateTimePickerDataCadastro.Enabled:=False;
      UmFrmCadcidade.ShowModal;
  end
  else
    ShowMessage('A CIDADE SELECIONADA NÃO EXISTE.');
end;

procedure TFrmConsultarCidade.TBtnNovoClick(Sender: TObject);
begin
  inherited;
   UmFrmCadcidade.ReconhecaObjeto(UmaCidade,UmaCtrlCidade);
   UmFrmCadcidade.ShowModal;
end;

procedure TFrmConsultarCidade.TEdtCidadeKeyPress(Sender: TObject;
  var Key: Char);
begin
  inherited;
  if not (key in ['A'..'Z','a'..'z',#8,#32,'ç','Ç']) then
     key := #0;
end;

procedure TFrmConsultarCidade.TEdtIdCidadeKeyPress(Sender: TObject;
  var Key: Char);
begin
  inherited;
  if not (key in ['0'..'9',#8]) then
     key := #0;
end;

end.
