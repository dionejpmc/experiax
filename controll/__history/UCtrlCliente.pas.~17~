unit UCtrlCliente;

interface
uses UCtrl, UDaoCliente, UDM, DB;
type
  TCTrlCliente = class (TCtrl)
  private
  protected
       UmaDaoCliente:TDaoCliente;
  public
        constructor Create;
        destructor Destroy;
        function Salvar(Objeto : TObject;Id:integer): string;                   virtual;
        function GetDs : TDataSource;                                override;
        function Carregar( Objeto : TObject): Tobject;               override;
        function Buscar(KeyId : Integer;KeyStr:String): boolean;     override;
        function Excluir(Objeto : TObject): string;                  override;
  end;

implementation

{ TCTrlCliente }

function TCTrlCliente.Buscar(KeyId: Integer; KeyStr: String): boolean;
begin
    Result:= UmaDaoCliente.Buscar(KeyId, KeyStr);
end;

function TCTrlCliente.Carregar(Objeto: TObject): Tobject;
begin
   UmaDaoCliente.Carregar(Objeto);
end;

constructor TCTrlCliente.Create;
begin
    UmaDaoCliente:=TDaoCliente.Create;
end;

destructor TCTrlCliente.Destroy;
begin
   UmaDaoCliente.Destroy;
end;

function TCTrlCliente.Excluir(Objeto: TObject): string;
begin
    UmaDaoCliente.Excluir(Objeto);
end;

function TCTrlCliente.GetDs: TDataSource;
begin
  Result:= UmaDaoCliente.GetDs;
end;

function TCTrlCliente.Salvar(Objeto: TObject;id:Integer): string;
begin
     UmaDaoCliente.Salvar(Objeto,id);
end;

end.
